#!/usr/bin/zsh
set -ex
setopt pipefail

cancel() {
  gh run cancel -R $GITHUB_REPOSITORY $GITHUB_RUN_ID
}

## setup
setup-cejs() {
  if [[ ! -d implementation ]] {
    git clone -qb flos --depth 1 --single-branch https://github.com/flosnvjx/work_crawler.git/ implementation
    env -C implementation -- npm install --silent cejs
  }
}

setup() {
  case "$implementation" {
    (cejs) setup-cejs;;
    ("") setup-cejs
         print -r -- implementation=cejs >> $GITHUB_ENV
         ;;
    (?*) false;;
  }
}

## asset
set-resenv() {
  case "$resid" {
    (dm:?*|dmmh:?*|nvcn:?*)
      export resscheme=nvcn
      ;;
    (nvtw:?*|webtoon:?*|webtoons:?*)
      export resscheme=nvtw
      ;;
    (txdm:?*|txac:?*|tx:?*|qqac:?*|acqq:?*)
      export resscheme=txdm
      ;;
    (cw:?*|ComicWalker:?*|comicwalker:?*)
      export resscheme=cw
      ;;
    (b22:?*|b23:?*|bili:?*|bilibili:?*|bman:?*)
      export resscheme=b22
      ;;
    (?*:?*)
      export resscheme=${resid%%:*}
      ;;
    (*) false;;
  }
  export resid=${resid#*:}
  print -r resid=$resid >> $GITHUB_ENV
  print -r resscheme=$resscheme >> $GITHUB_ENV

  [[ -n "$(print -rn -- $resid | abistring-to-gitname)" ]]
  export resbucket=$resscheme/"$(print -rn -- $resid | abistring-to-gitname)"
  print -r resbucket=$resbucket >> $GITHUB_ENV
}

checkout-asset() {
  local +x -i accumulated_errors= last_successful_at=
  local +x last_md5meta=-
  local -a matched_assets
  mkdir worktree
  if {
    gh release view -R $GITHUB_REPOSITORY --json body -- $resbucket || \
    echo require_create_release=1 >> $GITHUB_ENV
  } | jq -j .body | sed -znEe '/^```\n[0-9]+\n[0-9]+\n[-0-9a-f]+\n```\n$/s%^```\n([0-9]+)\n([0-9]+)\n([-0-9a-f]+)\n```\n$%\1 \2 \3\n% p' | read -r accumulated_errors last_successful_at last_md5meta && [[ $last_successful_at -gt 0 ]]; then
      mkdir tmpdir
      if gh release download -R $GITHUB_REPOSITORY -D tmpdir -p $implementation.$last_successful_at.\*.bsdzip -- $resbucket; then
      : retrieve cache
      local +x bsdzip; for bsdzip in tmpdir/*.bsdzip; do
        bsdtar -xf $bsdzip -C worktree
      done
      fi
      rm -rf tmpdir
  fi
  if [[ ${#last_md5meta} == 32 ]] {
    print -r -- last_md5meta=$last_md5meta >> $GITHUB_ENV
    print -r -- last_successful_at=$last_successful_at >> $GITHUB_ENV
  }
  print -r -- accumulated_errors=$accumulated_errors >> $GITHUB_ENV
#  mkdir ziptree
#  case $implementation {
#    (cejs)
#      case $resscheme {
#        (txdm)
#          ln -sr $PWD/worktree/qq -T ziptree/$resscheme
#        ;;
#        (nvcn)
#          ln -sr $PWD/worktree/dongman -T ziptree/$resscheme
#        ;;
#        (nvtw)
#          ln -sr $PWD/worktree/webtoon -T ziptree/$resscheme
#        ;;
#        (cw)
#          ln -sr $PWD/worktree/ComicWalker -T ziptree/$resscheme
#        ;;
#        (?*)
#          ln -sr $PWD/worktree/$resscheme -t ziptree
#        ;;
#      }
#      ;;
#    (*) : undefined
#      false
#      ;;
#  }
}

commit-asset() {
  setopt localoptions
  setopt localtraps
  trap 'printf '```%s\n%s\n%s\n```' $(( accumulated_errors + 1 )) ${last_successful_at} ${last_md5meta:--} | gh release edit -R $GITHUB_REPOSITORY -F - -- $resbucket; return 1' ZERR
  ! [[ -f errout ]]
  mkdir commit-stage
  cd worktree
  setopt globdots
  local +x ts=$(date +%s)
  local +x md5meta= p
  du -0abD -- * | grep -zve '\.json$' | LC_ALL=C sort -zu | md5sum - | IFS=' ' read -r md5meta p

  if [[ "$last_md5meta" != $md5meta ]] {
    function {
      setopt localoptions
      setopt extendedglob nullglob
      local -a t=(*(.) */*(.) */*/*(.) */*/*(/))
      [[ ${#t} -gt 0 ]]
      printf '%s\0' $t | REO_BASEFN=../commit-stage/$implementation.$ts.p reozip -
    }
    cd ..
    cd commit-stage
    if [[ "$require_create_release" == 1 ]] {
      gh release create -R $GITHUB_REPOSITORY --draft --target 63da79a3e51fc466a4a9f5629c8f125bb87bc653 --title $resscheme/${${:-"$(jq -r '. | keys[0]' -- ../worktree/*/search.json)"}:-$resannot} -- $resbucket
    }
    for f (*) {
      gh release upload -R $GITHUB_REPOSITORY -- $resbucket $f
    }
    printf '```\n%s\n%s\n%s\n```\n' 0 $ts $md5meta | gh release edit -F - -R $GITHUB_REPOSITORY -- $resbucket

    local -a prevarcs=( $( gh release view -R $GITHUB_REPOSITORY --json assets -- $resbucket | jq -r '.assets[].name' | glob $implementation.'*'.bsdzip | globv $implementation.$ts.'*'.bsdzip ) )
    if [[ ${#prevarcs} -gt 0 ]]; then
      local +x f; for f in $prevarcs; do
        gh release delete-asset -R $GITHUB_REPOSITORY -- $resbucket $f
      done
    fi
  } else {
    : md5meta unchanged.
    cancel
    sleep 999
  }
  #cd ..
}

_invoke-cejs() {
  trickle -v -s -d 1536 -t 5 node ../implementation/comic.*/${${${${${resscheme:/nvcn/dongman}:/nvtw/webtoon}:/txdm/qq}:/cw/ComicWalker}:/b22/bilibili}.js ${resid} recheck=$(if [[ $resscheme == cw ]]; then echo true; else echo multi_parts_changed; fi) archive_images=false
}

invoke() {
  cd worktree
  _invoke-$implementation "${(@)argv}" || { [[ "$accumulated_errors" != 1 ]]; touch ../errout }
}

"${(@)argv}"
