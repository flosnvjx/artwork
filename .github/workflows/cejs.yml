name: cejs
on:
  workflow_dispatch:
    inputs:
      ids:
        required: true
      scheme:
        type: choice
        required: true
        options:
          - u17
        default: u17
      storage:
        type: choice
        required: true
        options:
          - cloud189
          - releases
        default: cloud189
defaults:
  run:
    shell: bash
env:
  resIds: ${{ inputs.ids }}
  resScheme: ${{ inputs.scheme }}
  resStor: ${{ inputs.storage }}
  cejsVer: latest
  cejsEpoch: 1
jobs:
  in-one-go:
    runs-on: ubuntu-latest
    steps:
      - name: apt()
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -qq libarchive-tools pixz </dev/null >/dev/null
      - name: cache.npm(cejscrawler)
        uses: actions/cache@v3
        with:
          path: cejscrawler
          key: node_modules-cejscrawler-v${{ env.cejsVer }}_${{ env.cejsEpoch }}-ubuntu-latest
      - name: npm(cejscrawler)
        run: |
          if ! [[ -d cejscrawler ]]; then
            git clone -qb flos --depth 1 --single-branch https://github.com/flosnvjx/work_crawler.git/ cejscrawler
            env -C cejscrawler -- npm install --silent cejs
          fi
      - name: cejscrawler.${{ inputs.scheme }}(${{ inputs.ids }})
        run: |
          mkdir -p dl/"$resScheme"
          declare +x -a resIdsArr=($(printf '%s' "$resIds" | sed -sEe 's%[,; ]+%\n%g' | grep -Ee '^[0-9]+$'))
          declare +x walkId; for walkId in "${resIdsArr[@]}"; do
            sleep $(shuf -i 0-3|head -n1).$RANDOM
            if NODE_TLS_REJECT_UNAUTHORIZED=0 node cejscrawler/comic.cmn-Hans-CN/u17.js "$walkId" archive_images=false one_by_one max_error_retry=1
            then
              echo "$walkId" >> dl/"$resScheme"/ok.lst
            else
              echo "$walkId" >> dl/"$resScheme"/err.lst
            fi
          done
          ls -lR dl
          find dl -name '*.json' | xargs -rL1 jq -r .
